$ sudo tcpdump -d 'ip and tcp port 8080'

(000) ldh      [12]
(001) jeq      #0x800           jt 2	jf 12
(002) ldb      [23]
(003) jeq      #0x6             jt 4	jf 12
(004) ldh      [20]
(005) jset     #0x1fff          jt 12	jf 6
(006) ldxb     4*([14]&0xf)
(007) ldh      [x + 14]
(008) jeq      #0x1f90          jt 11	jf 9
(009) ldh      [x + 16]
(010) jeq      #0x1f90          jt 11	jf 12
(011) ret      #262144
(012) ret      #0

---解释

偏移为 4 处的指令从报文起始偏移为 20 字节处加载一个半字（16-bit）到 A 寄存器中，这个内容表示的值为 IP 报文中 3 bits 的 Flags 与 13 bits 的 Fragment Offset 的值。
偏移为 5 处的指令将 A 寄存器值的低 13 位与 0x1fff 进行与运算并根据结果进行跳转，实现当 Fragment Offset 为 0 的时候才继续判断端口号，非 0 则直接跳到 12 行。
偏移为 6 处的指令比较难懂，它的功能是加载实际的 ip 头长度，[14] & 0xf 对应的是 ip 报文中 IHL 的内容。由于 IHL 单位为 4 字节，因此对 IHL 的值乘了 4，就将真实的 ip 头长度字节数保存到了 X 寄存器中。
偏移为 7 处的指令以 X 寄存器中 ip 报文的长度为基础，加上 14 ( ether header 长度）得到 TCP 源端口的偏移量，并读取其值到 A 寄存器中。
